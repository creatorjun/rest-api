plugins {
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.23'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

kotlin {
    jvmToolchain(21) // Kotlin의 JVM 타겟을 Java와 동일하게 21로 설정
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5' // 또는 최신 안정 버전
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5' // 또는 jackson 대신 gson/org.json 사용 가능
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0' // 또는 최신 안정 버전
    implementation("io.netty:netty-resolver-dns-native-macos:4.1.119.Final:osx-x86_64") // 사용 중인 Netty 버전과 맞추세요

    // Kotlin 기본 라이브러리
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'

    // Swagger (테스트 ui)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    //fcm
    implementation("com.google.firebase:firebase-admin:9.4.3")

    // websocket
    implementation("org.springframework.boot:spring-boot-starter-websocket")

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'org.springframework.security:spring-security-test'

    // 제미나이
    implementation("com.google.genai:google-genai:1.1.0")
}

tasks.bootJar {
    // application.properties 파일을 JAR 파일에서 제외합니다.
    exclude("**/application.properties")
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

tasks.named('test') {
    useJUnitPlatform()
}